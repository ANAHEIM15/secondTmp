# secondTmp
Диаграмма последовательностей:
@startuml
actor Квартиросъемщик
actor "Владелец жилья"
participant "Информационная система\nжилищного агентства" as System
participant "База данных жилья" as DB

"Владелец жилья" -> System: Предложение жилья
System -> DB: Сохранение информации о жилье
DB --> System: Подтверждение сохранения
System -> "Владелец жилья": Подтверждение размещения объявления

Квартиросъемщик -> System: Подбор жилья
System -> DB: Получение списка доступных вариантов
DB --> System: Список доступных вариантов
System -> Квартиросъемщик: Показать доступные варианты

Квартиросъемщик -> System: Фильтрация по параметрам
System -> DB: Фильтрованный список
DB --> System: Отфильтрованный список
System -> Квартиросъемщик: Показать отфильтрованные варианты

Квартиросъемщик -> System: Получение информации о жилье
System -> DB: Запрос информации о выбранном жилье
DB --> System: Информация о жилье
System -> Квартиросъемщик: Показать информацию о жилье

Квартиросъемщик -> System: Бронирование жилья
System -> DB: Обновить статус жилья
DB --> System: Подтверждение бронирования
System -> Квартиросъемщик: Подтверждение бронирования
System -> "Владелец жилья": Уведомление о бронировании

Квартиросъемщик -> System: Оформление аренды
System -> DB: Обновить данные аренды
DB --> System: Подтверждение оформления аренды
System -> Квартиросъемщик: Подтверждение оформления аренды
System -> "Владелец жилья": Уведомление об аренде
@enduml

Диаграмма развертывания:

@startuml
node "Клиент (Квартиросъемщик)" as RenterClient {
  [Пользовательский интерфейс]
}

node "Клиент (Владелец жилья)" as OwnerClient {
  [Пользовательский интерфейс]
}

node "Сервер приложения" as AppServer {
  [Информационная система\nжилищного агентства]
}

node "База данных" as Database {
  [База данных жилья]
}

RenterClient --> AppServer: HTTP запросы
OwnerClient --> AppServer: HTTP запросы
AppServer --> Database: SQL запросы
@enduml

